services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: delivery_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d delivery_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./delivery-service-backend
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    environment:
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Database=delivery_db;Username=postgres;Password=postgres
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./delivery-service-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data: